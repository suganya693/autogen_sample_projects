# -*- coding: utf-8 -*-
"""Reddit_news_letter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BimPXw6fh_Rlo6HezWcB0Fm0VF7as0Jn

!pip install langchain

!pip install pyautogen

!pip install praw
"""

from langchain_community.document_loaders.reddit import RedditPostsLoader
import autogen
from autogen import AssistantAgent, UserProxyAgent

loader = RedditPostsLoader(
    client_id="TmUF0fQR_Ym0ZpNPDz4mCw",
    client_secret="6eR9vrrHUc0GDPMFPEgFawAyjrg6ew",
    user_agent="extractor by u/sugee_0606",
    categories=["new"],
    mode ="subreddit",
    search_queries=[
       "ai"
    ],
    number_posts=3,
)

documents = loader.load()

config_list =[
    {
        "model": "gpt-3.5-turbo-16k",
        "api_key": "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"
    }
]
llm_config=  {"config_list": config_list, "seed": 45}

writer = autogen.AssistantAgent(
    name="Writer",
    llm_config={"config_list": config_list},
    system_message=""" you dont change the information given, just parse the page_content from the reddit post. No code should be written. """,
)

user_proxy = autogen.UserProxyAgent(
    name ="User",
    human_input_mode="NEVER",
    max_consecutive_auto_reply=3,
    code_execution_config=False
)

user_proxy.initiate_chat(recipient=writer,
                         message = f"""i need you to extract the page_content and url from each of {documents} ,
                         with each documents extract seprate from each other. Make sure this is markdown. Get it for an email, but dont change what is in the documents.
                          create a News Letter from this information with:
                          [News letter Title Here]- make sure to create a catchy title

                          this format for markdown should be:

                          Title of the document
                          The page Content
                          The Author
                          The URL
                          """,
                         max_turns= 2,
                         summary_method="last_msg")